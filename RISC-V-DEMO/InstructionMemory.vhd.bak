-- Projet de fin d'Ã©tudes : RISC-V
-- ECE Paris / SECAPEM
-- Instruction Memory VHDL

-- LIBRARIES
library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;

-- ENTITY
entity InstructionMemory is
	port (
		-- INPUTS
		IMclock			: in std_logic;
		IMreset			: in std_logic;
		IMprogcounter	: in std_logic_vector(31 downto 0);
		-- OUTPUTS
		IMout				: out std_logic_vector(31 downto 0)
	);
end entity;

-- ARCHITECTURE
architecture archi of InstructionMemory is
	type mem is array(0 to 187) of std_logic_vector(7 downto 0);
	signal SigIMmemory : mem :=(
		x"37",x"11",x"00",x"00",  x"ef",x"00",x"c0",x"00",  x"73",x"00",x"10",x"00",  x"6f",x"00",x"00",x"00",  x"b7",x"a6",x"07",x"00",  x"37",x"07",x"00",x"80",  x"93",x"86",x"f6",x"11",  x"93",x"07",x"c0",x"04",
		x"93",x"85",x"07",x"07",  x"03",x"a5",x"07",x"00",  x"23",x"22",x"a7",x"00",  x"03",x"d5",x"47",x"00",  x"23",x"24",x"a7",x"00",  x"03",x"25",x"07",x"00",  x"e3",x"fe",x"a6",x"fe",  x"23",x"20",x"07",x"00",
		x"93",x"87",x"87",x"00",  x"e3",x"90",x"b7",x"fe",  x"6f",x"f0",x"5f",x"fd",  x"ff",x"ff",x"ff",x"ff",  x"ff",x"ff",x"00",x"00",  x"8c",x"ff",x"ff",x"ff",  x"ff",x"ff",x"00",x"00",  x"ce",x"8c",x"ff",x"ff",
		x"ff",x"ff",x"00",x"00",  x"c0",x"ce",x"8c",x"ff",  x"ff",x"ff",x"00",x"00",  x"c6",x"c0",x"ce",x"8c",  x"ff",x"ff",x"00",x"00",  x"bf",x"c6",x"c0",x"ce",  x"8c",x"ff",x"00",x"00",  x"86",x"bf",x"c6",x"c0",
		x"ce",x"8c",x"00",x"00",  x"c6",x"86",x"bf",x"c6",  x"c0",x"ce",x"00",x"00",  x"86",x"c6",x"86",x"bf",  x"c6",x"c0",x"00",x"00",  x"ff",x"86",x"c6",x"86",  x"bf",x"c6",x"00",x"00",  x"ff",x"ff",x"86",x"c6",
		x"86",x"bf",x"00",x"00",  x"ff",x"ff",x"ff",x"86",  x"c6",x"86",x"00",x"00",  x"ff",x"ff",x"ff",x"ff",  x"86",x"c6",x"00",x"00",  x"ff",x"ff",x"ff",x"ff",  x"ff",x"86",x"00",x"00"
	);
	
	signal SigIMprogcounter00 : integer;
	signal SigIMprogcounter08 : integer;
	signal SigIMprogcounter16 : integer;
	signal SigIMprogcounter24 : integer;
	
begin

	SigIMprogcounter00 <= 0 when ((unsigned(IMprogcounter) > 187) OR IMreset = '1') else to_integer(unsigned(IMprogcounter));
	SigIMprogcounter08 <= 0 when ((unsigned(IMprogcounter) > 187) OR IMreset = '1') else to_integer(unsigned(IMprogcounter) + 1);
	SigIMprogcounter16 <= 0 when ((unsigned(IMprogcounter) > 187) OR IMreset = '1') else to_integer(unsigned(IMprogcounter) + 2);
	SigIMprogcounter24 <= 0 when ((unsigned(IMprogcounter) > 187) OR IMreset = '1') else to_integer(unsigned(IMprogcounter) + 3);

	IMout(7 downto 0)   <= SigIMmemory(SigIMprogcounter00) when (SigIMprogcounter00 >= 0) else x"00";
	IMout(15 downto 8)  <= SigIMmemory(SigIMprogcounter08) when (SigIMprogcounter08 >= 0) else x"00";
	IMout(23 downto 16) <= SigIMmemory(SigIMprogcounter16) when (SigIMprogcounter16 >= 0) else x"00";
	IMout(31 downto 24) <= SigIMmemory(SigIMprogcounter24) when (SigIMprogcounter24 >= 0) else x"00";	

end archi;
-- END FILE